// Mocks generated by Mockito 5.4.5 from annotations
// in restaurant_app/test/screen/detail_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:restaurant_app/provider/detail/restaurant_detail_provider.dart'
    as _i2;
import 'package:restaurant_app/static/restaurant_detail_result_state.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [RestaurantDetailProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockRestaurantDetailProvider extends _i1.Mock
    implements _i2.RestaurantDetailProvider {
  MockRestaurantDetailProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.RestaurantDetailResultState get resultState =>
      (super.noSuchMethod(
            Invocation.getter(#resultState),
            returnValue: _i4.dummyValue<_i3.RestaurantDetailResultState>(
              this,
              Invocation.getter(#resultState),
            ),
          )
          as _i3.RestaurantDetailResultState);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i5.Future<void> fetchRestaurantDetail(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#fetchRestaurantDetail, [id]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
